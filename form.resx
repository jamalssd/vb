<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button5.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAZrUlEQVR4Xu3de7SddXng8aw17UxnjZh9
        gk6nVqW36eqM/aN/zAx2Vtd0puN0SRVEC+gSBbL3IQVRidN6QUAErVVAvNByDSEJAZIgqINaQWtI9j45
        uSfknhNukUi4E8k95OQ373t4oy+Hn2Hvc/bt7PfzWeu7qp5z3v2ma6/1PPv6TgIAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAoy5b+Guvrwz+weT+RX8xuVJ7
        X6lcO6uvvzpNkqSilM6+dAamszCdielszKZk75g8tfp7U8q1Sl+lOrdUqW1K/u/BpCBJkn7RwWxGzp1S
        qZaTxeB3szE6sUw+e+HvlPprl5Yq1a2j/oGSJKmOkhm6JVkKLilVlpyQjdfuNWVq9R19ldqPkxM/Mvof
        IkmSxtSRZBn4UfpyQTZuu0dycu9MTm7pqBOWJElNLJm1g1P6a/8nG7+dc3y59qbkhOaMPkFJktTCytV7
        +6bV3pqN4/ZKTuD8UqW251UnJUmSWl6pUt2dfqIgG8utlzzqPy4Z/HfGTkaSJLW9uyefvbCUjenWeP20
        gd/vq9SGIjcuSZI6VPqJgZZ9dLCvPPDHyQ3siN2wJEnqbKVKbefkcwf+JBvbzTGlv/b25JH/rtgNSpKk
        bqm2a8rU6onZ+B6f5ED/OTnoc6++EUmS1IU9O6Wy6D9lY3xs+qYufkupUns8cnBJktStlavbp/QvfHM2
        zhs0beWvlyrVJdEDS5Kkri55AL9s0ukb/3U21euX/OE1sQNKkqSJUam/dmU21uvTV66dlPyh7/OXJGli
        d2RKeeAvs/F+bG8+ffDf9lVqj0QO0tT+8BNLw8lXrgvnXL85fGzWUJg+e5skqc5Om70mnDJ7lSZg7561
        Mrzj+hXh7VcuC2/9xEB0Rja5bSecvfA3sjH/qyW/+IVRf9iUju+vhlOvXh9uW/xk+OmzBwIAY3df2B7u
        CtvUA93wzJZw4eIHw59etSxMSWZlbIaOt1K5elk25uPSdwwmj/4PxP54rKWD/4KZQ+GhJ/dld1sAxssC
        0Jv9484t4V23rGz6IlCqVPe9Ydri38rG/aslv/T10X80nv7sstVh9aO7s7srAM1iAejtrnpkU/jjzw1G
        Z+tYK5WrV2fj/pX+3XkD/z7ZEPbG/mgsffTWobD/4HB2VwWgmSwAvd8dB4fCu2aujM7YsVSq1Pa8btrC
        N2Rj/5eS4X9x7A/G0pe+/Vh2FwWgFSwAxelD314dnbVjKVkCLsrG/i8lC8CW2C832mV3PZrdPQFoFQtA
        sXr/guYsAcms35qN/Zf1lQf+NPaLjXbG1zeEI0eyeycALWMBKFYLjmwL//Pa5dHZ22jHn7vkv2bjvznf
        +pd+rv+53S9ld00AWskCULxu3b01vHX6+L83oFSpXpWN/5F3/68d/QuNNm/JU9ndEoBWswAUs+m1ddEZ
        3Fi11SPD/7izlh+f/A/Dr/6F+jvxklVh2FP/AG1jAShm6UsBb7t03B8PHB75NMDkSvXUyA8bam71yewu
        CUA7WACK2/TF438WoFSunTKpVK5+NvbDevvtjywJu/cfzu6SALSDBaC43bZvKPzm+bXoTK67cvXTk/r6
        q7OjP6yzM6/dlN0dAWgXC0Cx+/NvjPMTAeXazPTz/4PRH9bZdff/LLs7AtAuFoBiN+2+tdGZXG+lcm0g
        /QTAw6N/0EiLNr+Q3R0BaBcLQLG7YuPG6Eyuv9rQpL5y9an4D+tr+zP7s7sjAO1iASh21z29JTqT661U
        qT6ZvgSwL/bDenthry//AWg3C0Cxm7VnKDqT6y2Z/XvTlwCiP6y3A4dafMW/4YMh7NsRwt5HQzjk5QaA
        VK8vAPOGt4Q5BzeEW/Y/GK7fvWqk9D/PPrgx3Jn8LPY3RerOQ+NbANK6dwHYtSaEzZeHsOy0EJae+svW
        nh/CjvkhHN6X/SJA8fTSApAO9S8/XQ3/96Hvhcr6+eGvl98a3lm9/pj99fKZYWryu9Mfujf8w1OLk2Ns
        iB67V+vNBWD4QAjbrn7l0I+1amoIu7dkfwRQLBN9AZixd2349KP/HN6/ak50wI+l96+cHT716A/CTXvX
        RG+zl+q9BeDI4RA2XRof+LGWnx7Ci5uzPwYojom4AMw/MhS+9NSi8OG1t0cHeDP70Jq54Ys7Hxi5zdi5
        TPR6bwH46W3xQX+s0mcCDu/NDgBQDBNpAZg3vDVc8cTCcNqK135qv9mlLydc/rOfjJxD7Nwmar21ABx8
        LnlEf0Z8yL9WO+ZlBwEohomyAHxz1/LwgSY+zT/WTl8xK1zz/GD0HCdivbUA7PxefLjX09rzsoMAFEO3
        LwC3v7QpXLDlnugw7mTnbb47zD20KXrOE6neWgCGrowP93pLn0EAKIhuXgDSj+ylj7hjA7gbSj9BcO3P
        V0TPfaLUWwvAxovig73e9mzLDgTQ+7p1Abj8iZ+Ev6rdEB283VR6jpft+Jfov2Ei1FsLwPq/iw/2entx
        Y3YggN7XjQvApY//KDpsu7m/ffh7yblPvE8KWADyWQCAAummBWBB0oXb7o0O2InQR7d+JyyYYB8XtADk
        swAABdJNC8AnH/lBdLBOpKZv+3/Rf1u3ZgHIZwEACqRbFoBLJuDT/r+qi7bfF/03dmMWgHwWAKBAumEB
        +OpzS8JJkUE6kfvKM7Xov7XbsgDkswAABdLpBWDWgfXh1MEZ0SE6kTt5yU1hxr4Ho//mbsoCkM8CABRI
        JxeA9A1zZ629IzpAe6H0OgLdfg0BC0A+CwBQIJ1cAD7/s59EB2ezSz+rf9ryW0euGJh+nfBpy2e17TsG
        Pvf4j6P/9m7JApDPAgAUSKcWgPTa/acM3hwdmuMtHe7nbrxr5MJBN+5dE30Unv5vN+9dG67Y+UCYtvFb
        LVsI0pcC0pc5Rt9+t2QByGcBAAqkUwvAx7Z+Nzowx9MpgzPCRY/9MMw5tDF6m8cq/V7/i7ffH97TgqUk
        vZZB7Da7IQtAPgsAUCCdWABm7l/X1Efc6ScIPj703aZcnGfuS5tHPsvfzE8lnJT8W7v1DYEWgHwWAKBA
        OrEApAM2NijHUvoywtXPDkRvZzx99bnBpj4bkD7jEbudTmcByGcBAAqk3QtA+ij9XQM3Rodko71v2S3h
        xj2ro7fTjGbsXTvy5sHYbTda+ozH7IMborfTySwA+SwAQIG0ewFo1jv/37N0xsiAjt1GM0tfrnjvspnR
        c2i0bvxEgAUgnwUAKJB2LwAfWnN7dDg2Uvpo+h/beB3+63avbMqzFh9cdVv0+J3MApDPAgAUSDsXgPSN
        cLHB2GjpdQNix29l6TX/Y+fSaDftWRM9fqeyAOSzAAAF0s4FIP1cfmwoNlL6KLoz3643FD68dvzPXqSL
        RPz4nckCkM8CABRIOxeA8zbfHR2KjXTN84PRY7ejb76wLHpOjTRt413RY3cqC0A+CwBQIO1cAE5dekt0
        KNbbB1fPDQsix21n430W4OQlN49cAyF27E5kAchnAQAKpF0LQPrVv7GB2EjpJwhix25nX9w5/pcxZu7v
        nq8GtgDkswAABdKuBeDaXcujw7CRuuFz9Le9tCk5l/F9i+HXnl8aPXYnsgDkswAABdKuBWC8j5w/sHJ2
        9LidKL3Mb+wc660bnsk4mgUgnwUAKJB2LQAXbb8vOgzr7YIt344etxOl1x2InWO9ferRf44etxNZAPJZ
        AIACadcC8HePfD86DOstXSBix+1Elz7+4+g51tv0h+6NHrcTWQDyWQCAAmnXAnDhOC8A1E1Pm39x5wPR
        c6y3j279TvS4ncgCkM8CABRIuxaAdOjFhmG9pe8hiB23E3356Wr0HOvtbzbdHT1uJ7IA5LMAAAXSrgVg
        vJcA7qVnAC7Yck/0uJ3IApDPAgAUSLsWgE8+8oPoMKy3zzz2w+hxO1F6LYLYOdZb+ibC2HE7kQUgnwUA
        KJB2LQAXb78/Ogzr7fzN3fOo+WNbfQognwUAYAJq1wLw908uig7Dejtt+azocTvRB1bNiZ5jvV3+hO8B
        eEUWAID2a9cCkF6/PzYMG2nm/nXRY7ez9NsIT4qcWyN99bnOXdBodBaAfBYAoEDatQDMPZR+hW58INZb
        +tp77Njt7PM/+5fouTXSrAOuBfCKLAAA7deuBSDtfctmRgdivZ2xYnZHr6SXXonwg6tui55bvb1n8OaO
        X9EwnwUgnwUAKJB2LgDj/S6AtK88XY0eux1d/exA9Jwa6W82fSt67E5lAchnAQAKpJ0LwHjfCJh2+opb
        w7zhLdHjt7J5w1vDGStnR8+pkdKXEGLH71QWgHwWAKBA2rkApK99j/cNdGnpdQVix29l6fcQxM6l0brh
        jYz5LAD5LABAgbRzAUg7Z9286GBspHSJuPrZJdHjt6L0+v3vrN7wqvNotDPXzI0ev5NZAPJZAIACafcC
        0IyXAdLePXBT+KcXV0Zvo5ldv3t1OHnJTdFzaLRue/o/zQKQzwIAFEi7F4A7Dm9u2kA9ecnN4ZsvLIve
        TjNKv7vglMEZ0dtutHcN3BjmvrQ5ejudzAKQzwIAFEi7F4C0Tz46vusC5Pur2g0jFwpq9kfrvvDEwpGh
        HbvNsZReDCl2O53OApDPAgAUSCcWgDkHNyTDtTnPAhytsn5+mLHvwejtNdIt+x8M/Rvuit7GWEuXlG57
        89/RLAD5LABAgXRiAUj724e/Hx2W4ykdtOmFem7cszp6m8fqpr1rwoXJo/T0GLFjj6dPdOmj/zQLQD4L
        AFAgnVoAbn9pc3jvOL8Z8Fh9cPXckavupe/gv/XAule9RHDrgfUjP/v0Yz8ceXd+7BjNKH2/w5xDG19x
        292UBSCfBQAokE4tAGlffroaHZqtKn1DX1ozvoug3tLbuuKJhdF/fzdkAchnAQAKpJMLQPqo/NyNzX29
        vRvr5iXAApDPAgAUSCcXgLT0o3Hptf5jg7OXSpeAy5/4SfT/B53MApDPAgAUSKcXgLT08/atePNdt9WN
        zwRYAPJZAIAC6YYFIO3l9wMUYwnopmcCLAD5LABAgXTLApCWDsbY0Oy1umkJsADkswAABdJNC0DaZ396
        f3Ro9lrd8nKABSCfBQAokG5bANK+9OTiwrwnoNPPBFgA8lkAgALpxgUg7epnB8IpgzdHB2cv1elnAiwA
        +SwAQIF06wKQln6D31lr74gOzl6qk88EWADyWQCAAunmBSBt3vDWka/07fWXBDr1TIAFIJ8FACiQbl8A
        jnbz3rVh6rp50eHZztJnJNLLDzfzUsFH68QSYAHIZwEACmSiLABp6VcHX/PcYEdeFkgvLnTlMwO/uKjQ
        Nc8P9sQSYAHIZwEACmQiLQD5vvnCsnD+5rtbMoSPlr7sMG3jt8LXkmE/+mqCab2wBFgA8lkAgAKZqAvA
        0dJrCXwhGZb9GxaEdy8Z/zBOh/7U9fNH3pQ3++BrX8Z3oi8BFoB8FgCgQCb6ApBv/pGhcO3PV4RLH/9R
        +PjQd0deKnjv0luSgRp/A2H6szPXzA0XbLln5G/SZxXmDW+JHvtYTeQlwAKQzwIAFEgvLQDH6s5ksM85
        tHHkUf3tL20aWRZivzfWJuoSYAHIZwEACqQoC0A7+trzS1u2BLTqewIsAPksAECBWACa20RbAiwA+SwA
        QIFYAJpfK18O+OLOB6K3OdYsAPksAECBWABaU6uWgPRTCtfuWh69zbFkAchnAQAKxALQulr1csD7V85u
        2psYLQD5LABAgVgAWlurnglIvxExdnuNZgHIZwEACsQC0PpasQR84qF7o7fVaBaAfBYAoEAsAO2p2S8H
        VNYviN5Oo/XWArDxovhgr7c927IDAfQ+C0D7auYzAec8eGf0NhqttxaAbVfFB3u9HXo+OxBA77MAtLdm
        LQHnb74nevxG660F4Mnvxwd7Pa09PzsIQDFYANpfM14OSC+AFDt2o/XWApA+gl9+RnzAv1Y75mcHASgG
        C0BnGs8zAelVD9PrGsSO22i9tQCkHp8bH/DHanU5hMP7sgMAFIMFoHONdQn4zPYfRo83lnpvAThyOIRN
        n4sP+ljLTw9h99bsjwGKwwLQ2RpdAirr5zf1Soa9twCkhg+GsO2a+MDPt7pi+AOFZQHofP/04srwvmUz
        owM/30e3fifMG94aPcZY680F4Khda0PYcsXLj/Lzg3/tR0LYsSCEw/uzXwQoHgtAd3TH4S3h4p/eH85Y
        OfsVQz99duDcDXeFb+xaFv278dbbC8BRw4dC2L8jhL2PhnBoV/Y/AhSbBaD7St/gd8OeNeHmfQ82/RH/
        6JqyAJQq1X2xH9Tbrr0vZXdHANrFAlDsZu0Z3wKQzP69k/rK1adiP6y37c94Kh6g3SwAxe66p7dEZ3K9
        JQvAk+lLAA+P/kEjPbDphezuCEC7WACK3eUbNkZncv3VhtKXAAbjP6yv6+7fkd0dAWgXC0Cxm3bf2uhM
        rrdSuTYwqa+/Ojv2w3o789pN2d0RgHaxABS7//GN5dGZXHfl2sxJpXL1s9Ef1tmbzh8Iu/cfzu6SALSD
        BaC43bZvKPzm+bXoTK67cvXTkyZXqqdGf9hAty1+MrtLAtAOFoDiduHiB6OzuJFK5dopk447a/nxyX8Z
        Hv3DRjrxklVh+Eh2rwSg5SwAxWz+8FD4o4uXRGdxAw2ns39Sqq9cXRP5hYa6Y+Cp7G4JQKtZAIrZ9MXr
        ojO4sWqrRoZ/qlSpfTX+S/X3h9OXhmd3H8rumgC0kgWgeM18cWt4y4UD0RncSKX+2pXZ+J80acrU6omx
        X2q0M76+IRzxUgBAy1kAitWCI9vCn31tnO/8z3p9ufZfsvH/slK5ujn2i432qdsfyu6eALSKBaBYnT5/
        dXTmNlqpUtuUjf1fKlWqF8d+eSz9/bcfy+6iALSCBaAYpY/8z7xnTXTWjqn+2meysf9Lr5tafWOyGeyJ
        /sEYumDmUNh/sMVXCgQoKAtA73f7waFw0oyV0Rk7lpIH+rt/8e7/0ZIF4JrYH421//65VWHFwy9md1cA
        msUC0Nt95aFN4W2XDkZn61hLFoCrsnH/alPOGvzt5Bf2x/5wrB3fXw3nzdgahnbuy+62AIyXBaA3u3bn
        lvDOm1eEKcnsjM3UsZbM9r1vPHvhf8jGfVzyi58f/YfNKF0ETrlqXZi9aGd4zCWEAcbFAtA7pZf2/fii
        B8Pbr1zW9MF/tFKldkk25n+1E85e+Bt95epDsQM0s/R7A9595bpwzvWbw8dnbQvTZ0uS6u202WvCKbNX
        aQJ28qxV4R3XrwgnfmVZOGH6+D/X/1olj/63TvrYD/5NNuaPbUp54C+TPzoy+iCSJGlCdWTK1Oo7svFe
        n/TNApEDSZKkiVK5+g/ZWG/AZQt/LVkCatEDSpKkri6Z4UsnTVv569lUb8yU/oVvTraH7bEDS5Kkru2x
        48u1N2XjfGyOO2fRf0yWgKciB5ckSd3Xs8dPW/JH2Rgfn5cvFlTbFbkRSZLUNdVemFJZ/N+y8d0cfefW
        3laqVHfEb1CSJHWyUqW2c/K5A3+Sje3mmty/6HeTJWBL7IYlSVJnSq/yN/nshb+TjevWOL5cOy65sdtH
        37gkSepA5dptb/zIwtdlY7r1+vqr00qV6ovRk5EkSS0tmcE/n1KuVbKx3F5vmLb4t5KTmDP6pCRJUgsr
        V+/tm7r4Ldk47pzJlcX/O9lEfGmQJEmtrTq5XPtf2fjtHulJJYvA/ckJDo86YUmSNLaGk9l6X2lq9c+z
        cdu9+qbV3pqc7MWlcnVz5B8iSZJeo2SObixVahd1xVP9Y1GqLDlhcn91avKPmZP8Yzb0VWoHRv8jJUkq
        drUDyYxcn/znOZPLi89JH0hnY7SHnL7gX71+2sDvT+5f9BeTp1bfm/yDP5x+okCSpKKUzr7Jleqp6Uvn
        ySz8vXQ2ZlMSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAgKKbNOn/Ax+yu4frQyetAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="fullname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="studentNumber.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="math.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="english.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="arabic.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="physics.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="total.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="average.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="GPA.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="comment.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="image.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CMSUserDataTable.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>